<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teacher">

	<!-- modal 전체 교사 조회 -->
	<select id="All_Teacher_List" resultType="com.assign_manage.vo.VO_User">
		select id, user_name, gender from user where user_class = 1
	</select>
	
    <!-- 전체 강의 조회 -->
    <select id="selectAllLectures" resultType="com.assign_manage.vo.VO_Lecture" parameterType="String">
    
    	<!-- select * from lecture WHERE delete_date IS null ORDER BY lecture_no --> 
    
    
    <!-- select count(*) from lecture_list where lecture_no = ? -->
    
        SELECT 
			le.*, 
			(select count(*) from lecture_list where lecture_no = le.lecture_no) as cnt,
			u.user_name
		FROM lecture le
		inner join user u on le.id = u.id
		WHERE delete_date IS null
		<!-- <if test="!value.equals('') and value != null">
        	AND lecture_name = #{value}
        </if> -->
		ORDER BY lecture_no
    </select>

    <!-- 특정 강의 과제 목록 -->
<select id="selectAssignmentsByLecture" parameterType="int" resultType="com.assign_manage.vo.VO_Assignment">
    SELECT * FROM assignment
    WHERE lecture_no = #{lecture_no}
      AND delete_date IS NULL
    ORDER BY assign_no DESC
</select>

    <!-- 특정 과제 조회 -->
    <select id="selectAssignmentByNo" parameterType="int" resultType="com.assign_manage.vo.VO_Assignment">
        SELECT * FROM assignment
        WHERE assign_no = #{assign_no}
          AND delete_date IS NULL
    </select>

    <!-- 과제 추가 -->
    <insert id="insertAssignment" parameterType="com.assign_manage.vo.VO_Assignment">
        INSERT INTO assignment
        (lecture_no, assign_name, assign_note, assign_method, create_date, end_date)
        VALUES
        (#{lecture_no}, #{assign_name}, #{assign_note}, #{assign_method}, #{create_date}, #{end_date})
    </insert>

<!-- =============================================== -->
<!-- 반우진 작업 시작부분 -->
<!-- =============================================== -->

	<!-- 사용자 전체 조회 -->
	<select id="All_Student_List" resultType="com.assign_manage.vo.VO_User">
	<!-- alias를 이용해 등급 명칭을 수정 -->
		select 
			case user_class
				when 0 then '관리자'
				when 1 then '교사'
				when 2 then '학생'
				else '기타'
			end as user_class,
		id,
		user_name,
		gender,
		birth,
		tel,
		email
		from user
		where user_class = 2;
		<!-- user테이블의 id컬럼의 값을 VO_User의 setId()에 저장 -->
	</select>
	
	<select id="selectListUser" 
		parameterType="com.assign_manage.vo.VO_SearchFilter_AllStudent"
		resultType="com.assign_manage.vo.VO_User">
        SELECT
            *
        FROM
            user
        <where>
            <if test="filter != null and filter != '' and q != null and q != '' and filter != 'all'">
                <choose>
                    <when test="filter == 'class'">
                        AND user_class LIKE CONCAT('%', #{q}, '%')
                    </when>
                    <when test="filter == 'id'">
                        AND id LIKE CONCAT('%', #{q}, '%')
                    </when>
                    <when test="filter == 'user_name'">
                        AND user_name LIKE CONCAT('%', #{q}, '%')
                    </when>
                    <when test="filter == 'gender'">
                        AND gender = #{q} </when>
                </choose>
            </if>
        </where>

        <if test="sort != null and sort != ''">
            ORDER BY
            <choose>
                <when test="sort == 'asc'"> id ASC </when>
                <when test="sort == 'desc'"> id DESC </when>

                <when test="sort == '등급순(높은순)'"> user_class DESC </when>
                <when test="sort == '등급순(낮은순)'"> user_class ASC </when>

                <when test="sort == '생년월일(오름차순)'"> birth ASC </when>
                <when test="sort == '생년월일(내림차순)'"> birth DESC </when>

                <when test="sort == '이름(오름차순)'"> user_name ASC </when>
                <when test="sort == '이름(내림차순)'"> user_name DESC </when>

                <when test="sort == '아이디(오름차순)'"> id ASC </when>
                <when test="sort == '아이디(내림차순)'"> id DESC </when>

                <otherwise> join_date DESC </otherwise>
            </choose>
        </if>
        <if test="sort == null or sort == ''">
            ORDER BY join_date DESC </if>
        <if test="pageSize != null and offset != null">
            LIMIT #{offset}, #{pageSize}
        </if>
        </select>
<!-- =============================================== -->
<!-- 반우진 작업 끝 부분 -->
<!-- =============================================== -->
</mapper>
