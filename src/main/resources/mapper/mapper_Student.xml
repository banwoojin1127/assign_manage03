<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Namespace를 통해 JAVA 클래스와 Annotation클래스와 동기 -->
<mapper namespace="student">

	<select id="assign_view" parameterType="java.lang.String" 
			resultType="com.assign_manage.vo.VO_Assignment">
		select 
			a.assign_no, a.lecture_no, a.assign_name, a.assign_note, 
			a.assign_method, a.end_date, l.lecture_name as lecture_name 
		from assignment a
		left join lecture l on a.lecture_no = l.lecture_no
		left join user u on l.id = u.id
		where assign_no = #{ assign_no }
	</select>

	<select id="assign_list" parameterType="map" 
			resultType="com.assign_manage.vo.VO_Assignment">
		select 
			a.assign_no, a.lecture_no, a.assign_name, a.end_date, 
			l.lecture_name as lecture_name, u.user_name as teacher_name 
		from assignment a
		inner join lecture_list l_l on a.lecture_no = l_l.lecture_no
		inner join lecture l on a.lecture_no = l.lecture_no
		inner join user u on l.id = u.id
		where l_l.id = 's2ezen' 
		  <if test="lecture_no != null and lecture_no != ''">
		      and a.lecture_no = #{ lecture_no } 
		  </if>
		  and a.delete_date is null
		order by a.create_date asc
	</select>

	<insert id="report_insert" parameterType="com.assign_manage.vo.VO_Report"
		useGeneratedKeys="true" keyProperty="report_no">
		insert into report (id, report_note, create_date, delete_date)
		values (#{ id }, #{ report_note }, #{ create_date }, #{ delete_date })
	</insert>
	
	<update id="report_modify" parameterType="com.assign_manage.vo.VO_Report">
		update report set
		report_note = #{ report_note }
		where report_no = #{ report_no }
	</update>
	
	<select id="report_view" parameterType="java.lang.String" 
			resultType="com.assign_manage.vo.VO_Report">
		select 
			r.report_no, r.assign_no, r.id, r.report_note, r.create_date, r.delete_date, 
			a.assign_name, l.lecture_name, u1.user_name as student_name, u2.user_name as teacher_name
		from report r
		left join assignment a on r.assign_no = a.assign_no
		left join lecture l on a.lecture_no = l.lecture_no
		left join user u1 on r.id = u1.id
		left join user u2 on l.id = u2.id
		where report_no = #{ report_no }
	</select>
	
	<insert id="file_insert" parameterType="com.assign_manage.vo.VO_File"
		useGeneratedKeys="true" keyProperty="file_no">
		insert into file (p_name, f_name, create_date, delete_date, file_size, extension, file_path)
		values (#{ p_name }, #{ f_name }, #{ create_date }, #{ delete_date },
		#{ file_size }, #{ extension }, #{ file_path })
	</insert>

	<update id="file_modify" parameterType="com.assign_manage.vo.VO_File">
		update file set
		p_name = #{ p_name }, f_name = #{ f_name }, file_size = #{ file_size },
		extension = #{ extension }, file_path = #{ file_path }
		where file_no = #{ file_no }
	</update>
	
	<select id="file_view" parameterType="java.lang.String" 
		resultType="com.assign_manage.vo.VO_File">
		select 
			file_no, report_no, p_name, f_name, create_date, delete_date, file_size, extension, file_path
		from file
		where file_no = #{ file_no }
	</select>
	
	<delete id="file_delete" parameterType="java.lang.String">
		delete from file
		where file_no = #{ file_no }
	</delete>
	
	<select id="feedback_view" parameterType="java.lang.String" 
		resultType="com.assign_manage.vo.VO_Feedback">
		select 
			report_no, id, feedback, score
		from feedback
		where report_no = #{ report_no }
	</select>
	
	<insert id="question_insert" parameterType="com.assign_manage.vo.VO_Question"
		useGeneratedKeys="true" keyProperty="quest_no">
		insert into question (id, quest_note, create_date, delete_date)
		values (#{ id }, #{ quest_note }, #{ create_date }, #{ delete_date })
	</insert>

	<update id="question_modify" parameterType="com.assign_manage.vo.VO_Question">
		update question set
		quest_note = #{ quest_note }
		where quest_no = #{ quest_no }
	</update>
	
	<select id="question_view" parameterType="java.lang.String" 
		resultType="com.assign_manage.vo.VO_Question">
		select 
			q.quest_no, q.assign_no, q.id, q.quest_note, q.create_date, q.delete_date, u.user_name as name
		from question q
		left join user u on q.id = u.id
		where quest_no = #{ quest_no }
	</select>
	
	<delete id="question_delete" parameterType="java.lang.String">
		delete from question
		where quest_no = #{ quest_no }
	</delete>
	
	<select id="answer_view" parameterType="java.lang.String" 
		resultType="com.assign_manage.vo.VO_Answer">
		select 
			a.quest_no, a.id, a.answer_note, a.create_date, a.delete_date, u.user_name
		from answer a
		left join user u on a.id = u.id
		where quest_no = #{ quest_no }
	</select>
	
	<select id="lecture_total" parameterType="com.assign_manage.vo.VO_Search_student"
		resultType="java.lang.Integer">
		select count(*) as total
		from lecture_list l_l 
		left join lecture l on l_l.lecture_no = l.lecture_no
		left join user u on l.id = u.id
		where id = #{ id } 
		<if test='type.equals("전체") and keyword != null and !keyword.equals("")'>
			and (lecture_name like '%${ keyword }%' or user.user_name like '%${ keyword }%')
		</if>
		<if test='type.equals("강의명") and keyword != null and !keyword.equals("")'>
			and lecture_name like '%${ keyword }%'
		</if>
		<if test='type.equals("교사명") and keyword != null and !keyword.equals("")'>
			and u.user_name like '%${ keyword }%'
		</if>
	</select>
	
	<select id="lecture_list" parameterType="com.assign_manage.vo.VO_Search_student"
		resultType="com.assign_manage.vo.VO_Lecture_list">
		select l_l.id, l_l.lecture_no, l_l.lecture_name, l_l.create_date,
		l_l.delete_date, l.start_date, l.end_date, u.name
		from lecture_list l_l
		left join lecture l in l_l.lecture_no = l.lecture_no
		left join user u on l.id = u.id
		where id = #{ id } 
		<if test='type.equals("전체") and keyword != null and !keyword.equals("")'>
			and (lecture_name like '%${ keyword }%' or user.user_name like '%${ keyword }%')
		</if>
		<if test='type.equals("강의명") and keyword != null and !keyword.equals("")'>
			and lecture_name like '%${ keyword }%'
		</if>
		<if test='type.equals("교사명") and keyword != null and !keyword.equals("")'>
			and u.user_name like '%${ keyword }%'
		</if>
		order by no desc
		limit # {offset },10		
	</select>
</mapper>